name: Publish Extension

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags, e.g., v1.2.3
  workflow_dispatch:  # Allows manual trigger
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        run: npm install

      - name: Update version
        run: |
          # Get the latest git tag
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          VERSION=${VERSION#v}  # Remove 'v' prefix
          
          # Read current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # If versions are different, update package.json
          if [ "$VERSION" != "$CURRENT_VERSION" ]; then
            npm version $VERSION --no-git-tag-version
          fi

      - name: Check if version exists and publish to VS Marketplace
        id: vs_marketplace
        continue-on-error: true
        env:
          VSCE_TOKEN: ${{ secrets.VS_MARKETPLACE_TOKEN }}
        run: |
          # Get current version
          VERSION=$(node -p "require('./package.json').version")
          
          # Try to view the extension info
          if ! npx @vscode/vsce show vatsalsy.gruvbox-crisp-tex $VERSION 2>/dev/null; then
            echo "Version $VERSION does not exist. Publishing..."
            npx @vscode/vsce publish -p $VSCE_TOKEN
          else
            echo "Version $VERSION already exists. Skipping publish."
            exit 0
          fi

      - name: Create Open VSX namespace and publish
        if: steps.vs_marketplace.outcome == 'success'
        env:
          OVSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
        run: |
          # Try to create namespace (it's ok if it already exists)
          npx ovsx create-namespace vatsalsy -p $OVSX_TOKEN || true
          # Publish to Open VSX
          npx ovsx publish -p $OVSX_TOKEN
